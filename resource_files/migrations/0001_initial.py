# Generated by Django 5.0.9 on 2024-10-02 00:01

import resource_files.utils
import uuid
import wagtail.search.index
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='LineStringVectorLayerFile',
            fields=[
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('file', models.FileField(upload_to=resource_files.utils.uuid_file_path, validators=[resource_files.utils.validate_linestring_vector_file])),
                ('kind', models.CharField(max_length=50, null=True)),
            ],
            options={
                'verbose_name': 'LineString Vector Layer File',
                'verbose_name_plural': 'Files: LineString Vector Layer Files',
            },
        ),
        migrations.CreateModel(
            name='MultiLineStringVectorLayerFile',
            fields=[
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('file', models.FileField(upload_to=resource_files.utils.uuid_file_path, validators=[resource_files.utils.validate_multilinestring_vector_file])),
                ('kind', models.CharField(max_length=50, null=True)),
            ],
            options={
                'verbose_name': 'MultiLineString Vector Layer File',
                'verbose_name_plural': 'Files: MultiLineString Vector Layer Files',
            },
        ),
        migrations.CreateModel(
            name='MultiPointVectorLayerFile',
            fields=[
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('file', models.FileField(upload_to=resource_files.utils.uuid_file_path, validators=[resource_files.utils.validate_multipoint_vector_file])),
                ('kind', models.CharField(max_length=50, null=True)),
            ],
            options={
                'verbose_name': 'MultiPoint Vector Layer File',
                'verbose_name_plural': 'Files: MultiPoint Vector Layer Files',
            },
        ),
        migrations.CreateModel(
            name='MultiPolygonVectorLayerFile',
            fields=[
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('file', models.FileField(upload_to=resource_files.utils.uuid_file_path, validators=[resource_files.utils.validate_multipolygon_vector_file])),
                ('kind', models.CharField(max_length=50, null=True)),
            ],
            options={
                'verbose_name': 'MultiPolygon Vector Layer File',
                'verbose_name_plural': 'Files: MultiPolygon Vector Layer Files',
            },
        ),
        migrations.CreateModel(
            name='PointVectorLayerFile',
            fields=[
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('file', models.FileField(upload_to=resource_files.utils.uuid_file_path, validators=[resource_files.utils.validate_point_vector_file])),
                ('kind', models.CharField(max_length=50, null=True)),
            ],
            options={
                'verbose_name': 'Point Vector Layer File',
                'verbose_name_plural': 'Files: Point Vector Layer Files',
            },
        ),
        migrations.CreateModel(
            name='PointVectorLayerFileDocument',
            fields=[
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('title', models.CharField(max_length=255, verbose_name='title')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('file_size', models.PositiveIntegerField(editable=False, null=True)),
                ('file_hash', models.CharField(blank=True, editable=False, max_length=40)),
                ('uuid', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('file', models.FileField(upload_to=resource_files.utils.uuid_file_path, validators=[resource_files.utils.validate_point_vector_file])),
                ('kind', models.CharField(max_length=50, null=True)),
            ],
            options={
                'verbose_name': 'document',
                'verbose_name_plural': 'documents',
                'permissions': [('choose_document', 'Can choose document')],
                'abstract': False,
            },
            bases=(wagtail.search.index.Indexed, models.Model),
        ),
        migrations.CreateModel(
            name='PolygonVectorLayerFile',
            fields=[
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('file', models.FileField(upload_to=resource_files.utils.uuid_file_path, validators=[resource_files.utils.validate_polygon_vector_file])),
                ('kind', models.CharField(max_length=50, null=True)),
            ],
            options={
                'verbose_name': 'Polygon Vector Layer File',
                'verbose_name_plural': 'Files: Polygon Vector Layer Files',
            },
        ),
    ]
